set :partials, 32
set :dura, 0.075
set :pdamp, 0.5
set :fund, 60
set :mode, "mirror" # default, "reverse", "mirror", random

use_synth :sine
use_synth_defaults attack: 0.05, sustain: 1

overtones = []

defonce :init do
  set(:overtones, (ring :r))
end

live_loop :build_overtones do
  get(:partials).times do
    sleep get(:dura)
    cnt = (tick % get(:partials)) + 1 # we need 1-based indexing
    freq = hz_to_midi(get(:fund) * cnt)
    if overtones.size < get(:partials)
      overtones.push(freq)
    end
  end
  set(:overtones, overtones.ring)
  sleep get(:dura) * get(:partials)
  overtones = []
end

# play_overtones
live_loop :play_overtones do
  p = get(:partials)
  cnt = (tick % p) + 1
  #use_synth_defaults amp: 1/(get(:pdamp) * cnt), release: (p - cnt + 1) * get(:dura)
  case get(:mode)
  when "reverse"
    play get(:overtones).reverse.look
  when "mirror"
    play get(:overtones).mirror.look
  when "random"
    play get(:overtones).shuffle.look
  else
    play get(:overtones).look
  end
  sleep get(:dura)
end